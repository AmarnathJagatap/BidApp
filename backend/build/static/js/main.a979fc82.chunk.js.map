{"version":3,"sources":["assets/sports.png","actions/types.jsx","Containers/Signup.jsx","actions/auth.jsx","Containers/popupform.jsx","Containers/Home.jsx","Containers/About.jsx","Containers/Login.jsx","Containers/Contact.jsx","components/Navbar.jsx","Containers/Activate.jsx","App.jsx","index.js"],"names":["USER_LOADED_FAIL","connect","state","isAuthenticated","auth","signup","first_name","last_name","email","password","re_password","dispatch","a","config","headers","body","JSON","stringify","axios","post","process","REACT_APP_API_URL","res","type","payload","data","btnStyle","marginTop","color","backgroundColor","justifyContent","alignItems","alignContent","validationSchema","Yup","shape","name","min","required","companyName","phoneNumber","matches","confirmPassword","oneOf","selectOption","useState","accountCreated","setAccountCreated","formData","setFormData","onChange","e","target","value","onSubmit","preventDefault","to","Grid","Paper","elevation","style","padding","width","align","Typography","variant","initialValues","props","noValidate","as","TextField","label","fullWidth","className","error","errors","touched","helperText","Button","onClick","DialogTitle","withStyles","theme","createStyles","root","margin","spacing","closeButton","position","right","top","palette","grey","children","classes","onClose","other","disableTypography","IconButton","DialogContent","MuiDialogContent","MuiDialogActions","CustomizedDialogs","title","buttontitle","btnstyle","React","open","setOpen","Dialog","maxWidth","id","dividers","Home","src","sport","class","alt","About","login","localStorage","getItem","get","Contact","Navbar","activeClassName","verify","uid","token","match","verified","setVerified","params","App","exact","path","component","Login","Signup","Activate","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.a979fc82.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/sports.c7be7fa2.png\";","export const LOGIN_SUCCESS = 'LOGIN_SUCCESS';\r\nexport const LOGIN_FAIL = 'LOGIN_FAIL';\r\nexport const SIGNUP_SUCCESS = 'SIGNUP_SUCCESS';\r\nexport const SIGNUP_FAIL = 'SIGNUP_FAIL';\r\nexport const ACTIVATION_SUCCESS = 'ACTIVATION_SUCCESS';\r\nexport const ACTIVATION_FAIL = 'ACTIVATION_FAIL';\r\nexport const USER_LOADED_SUCCESS = 'USER_LOADED_SUCCESS';\r\nexport const USER_LOADED_FAIL = 'USER_LOADED_FAIL';\r\nexport const AUTHENTICATED_SUCCESS = 'AUTHENTICATED_SUCCESS';\r\nexport const AUTHENTICATED_FAIL = 'AUTHENTICATED_FAIL';\r\nexport const PASSWORD_RESET_FAIL = 'PASSWORD_RESET_FAIL';\r\nexport const PASSWORD_RESET_SUCCESS = 'PASSWORD_RESET_SUCCESS';\r\nexport const PASSWORD_RESET_CONFIRM_FAIL = 'PASSWORD_RESET_CONFIRM_FAIL';\r\nexport const PASSWORD_RESET_CONFIRM_SUCCESS = 'PASSWORD_RESET_CONFIRM_SUCCESS';\r\nexport const LOGOUT = 'LOGOUT';","import React, { useState } from 'react'\r\nimport { Grid, Paper, Button, Typography } from '@material-ui/core'\r\nimport { TextField } from '@material-ui/core'\r\nimport { Formik, Form, Field, ErrorMessage } from 'formik'\r\nimport * as Yup from 'yup'\r\nimport { Redirect } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\nimport { signup } from '../actions/auth';\r\n\r\nconst Signup = ({ signup, isAuthenticated }) => {\r\n    const paperStyle = { padding: '0 15px 40px 15px', width: 400, justifyContent: 'center', alignItems: 'center', }\r\n    const btnStyle = { marginTop: 10, color: '#eee7df', backgroundColor: '#FF8C00', justifyContent: 'center', alignItems: 'center', alignContent: 'center', }\r\n    const phoneRegExp = /^[2-9]{2}[0-9]{8}/\r\n    const passwordRegExp = /^(?=.*?[A-Z])(?=.*?[a-z])(?=.*?[0-9])(?=.*?[#?!@$%^&*-]).{8,}$/\r\n    const initialValues = {\r\n        name: '',\r\n        email: '',\r\n        companyName: '',\r\n        phoneNumber: '',\r\n        password: '',\r\n        re_password: '',\r\n    }\r\n    const validationSchema = Yup.object().shape({\r\n        name: Yup.string().min(3, \"It's too short\").required(\"Required\"),\r\n        companyName: Yup.string().min(2, \"It's too short\").required(\"Required\"),\r\n        email: Yup.string().email(\"Enter valid email\").required(\"Required\"),\r\n        // phoneNumber: Yup.number().typeError(\"Enter valid Phone number\").required(\"Required\"),\r\n        phoneNumber: Yup.string().matches(phoneRegExp, \"Enter valid Phone number\").required(\"Required\"),\r\n        password: Yup.string().min(8, \"Minimum characters should be 8\")\r\n            .matches(passwordRegExp, \"Password must have one upper, lower case, number, special symbol\").required('Required'),\r\n        confirmPassword: Yup.string().oneOf([Yup.ref('password')], \"Password not matches\").required('Required'),\r\n        selectOption: Yup.string().required('Required'),\r\n    })\r\n\r\n    const [accountCreated, setAccountCreated] = useState(false);\r\n    const [formData, setFormData] = useState({\r\n        name: '',\r\n        email: '',\r\n        companyName: '',\r\n        password: '',\r\n        re_password: ''\r\n    });\r\n\r\n    const { name, email, companyName, password, re_password } = formData;\r\n\r\n    const onChange = e => setFormData({ ...formData, [e.target.name]: e.target.value });\r\n\r\n    const onSubmit = e => {\r\n        e.preventDefault();\r\n\r\n        if (password === re_password) {\r\n            signup(name, email, companyName, password, re_password);\r\n            setAccountCreated(true);\r\n        }\r\n    };\r\n    if (isAuthenticated) {\r\n        return <Redirect to='/' />\r\n    }\r\n    if (accountCreated) {\r\n        return <Redirect to='/login' />\r\n    }\r\n\r\n    return (\r\n        <Grid>\r\n            <Paper elevation={0} style={paperStyle}>\r\n                <Grid align='center'>\r\n                    <Typography variant='caption'>Fill the form to create an account</Typography>\r\n                </Grid>\r\n                <Formik initialValues={initialValues} validationSchema={validationSchema} onSubmit={onSubmit}>\r\n                    {(props) => (\r\n                        <Form noValidate onSubmit={e => onSubmit(e)}>\r\n                            {/* <TextField label='Name' name=\"name\" fullWidth value={props.values.name}\r\n                    onChange={props.handleChange} /> */}\r\n\r\n\r\n\r\n                            <Field as={TextField} name='name' label='Name' fullWidth className=\"forminput\"\r\n                                error={props.errors.name && props.touched.name}\r\n                                onChange={e => onChange(e)}\r\n                                helperText={<ErrorMessage name='name' />} required />\r\n\r\n\r\n                            <Field as={TextField} name='companyName' label='Company Name' fullWidth\r\n                                error={props.errors.companyName && props.touched.companyName}\r\n                                onChange={e => onChange(e)}\r\n                                helperText={<ErrorMessage name='companyName' />} required />\r\n\r\n                            {/* <TextField label='Email' name='email' type='Email' fullWidth \r\n                    {...props.getFieldProps('email')}/> */}\r\n\r\n                            <Field as={TextField} name='email' label='Email' fullWidth\r\n                                error={props.errors.email && props.touched.email}\r\n                                onChange={e => onChange(e)}\r\n                                helperText={<ErrorMessage name='email' />} required />\r\n\r\n                            {/* <Field as={TextField} name=\"phoneNumber\" label='Phone Number' fullWidth\r\n                                error={props.errors.phoneNumber && props.touched.phoneNumber}\r\n                                onChange={e => onChange(e)}\r\n                                helperText={<ErrorMessage name='phoneNumber' />} required /> */}\r\n\r\n                            <Field as={TextField} name='password' label='Password' type='password' fullWidth\r\n                                error={props.errors.password && props.touched.password}\r\n                                onChange={e => onChange(e)}\r\n                                helperText={<ErrorMessage name='password' />} required />\r\n\r\n                            <Field as={TextField} name='re_password' label='Confirm Password' type='password' fullWidth\r\n                                error={props.errors.confirmPassword && props.touched.confirmPassword}\r\n                                onChange={e => onChange(e)}\r\n                                helperText={<ErrorMessage name='re_password' />} required />\r\n\r\n                            <Button type='submit' style={btnStyle} variant='contained'\r\n                                color='primary' className=\"btn-get-started\" onClick={e => onSubmit(e)}>Register</Button>\r\n                        </Form>\r\n                    )}\r\n                </Formik>\r\n            </Paper>\r\n        </Grid>\r\n    )\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n    isAuthenticated: state.auth.isAuthenticated\r\n});\r\n\r\nexport default connect(mapStateToProps, { signup })(Signup);","import axios from 'axios';\r\nimport {\r\n    LOGIN_SUCCESS,\r\n    LOGIN_FAIL,\r\n    USER_LOADED_SUCCESS,\r\n    USER_LOADED_FAIL,\r\n    AUTHENTICATED_SUCCESS,\r\n    AUTHENTICATED_FAIL,\r\n    PASSWORD_RESET_SUCCESS,\r\n    PASSWORD_RESET_FAIL,\r\n    PASSWORD_RESET_CONFIRM_SUCCESS,\r\n    PASSWORD_RESET_CONFIRM_FAIL,\r\n    SIGNUP_SUCCESS,\r\n    SIGNUP_FAIL,\r\n    ACTIVATION_SUCCESS,\r\n    ACTIVATION_FAIL,\r\n    GOOGLE_AUTH_SUCCESS,\r\n    GOOGLE_AUTH_FAIL,\r\n    FACEBOOK_AUTH_SUCCESS,\r\n    FACEBOOK_AUTH_FAIL,\r\n    LOGOUT\r\n} from './types';\r\n\r\nexport const load_user = () => async dispatch => {\r\n    if (localStorage.getItem('access')) {\r\n        const config = {\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                'Authorization': `JWT ${localStorage.getItem('access')}`,\r\n                'Accept': 'application/json'\r\n            }\r\n        }; \r\n\r\n        try {\r\n            const res = await axios.get(`${process.env.REACT_APP_API_URL}/auth/users/me/`, config);\r\n    \r\n            dispatch({\r\n                type: USER_LOADED_SUCCESS,\r\n                payload: res.data\r\n            });\r\n        } catch (err) {\r\n            dispatch({\r\n                type: USER_LOADED_FAIL\r\n            });\r\n        }\r\n    } else {\r\n        dispatch({\r\n            type: USER_LOADED_FAIL\r\n        });\r\n    }\r\n};\r\n\r\n\r\n\r\n\r\nexport const checkAuthenticated = () => async dispatch => {\r\n    if (localStorage.getItem('access')) {\r\n        const config = {\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                'Accept': 'application/json'\r\n            }\r\n        }; \r\n\r\n        const body = JSON.stringify({ token: localStorage.getItem('access') });\r\n\r\n        try {\r\n            const res = await axios.post(`${process.env.REACT_APP_API_URL}/auth/jwt/verify/`, body, config)\r\n\r\n            if (res.data.code !== 'token_not_valid') {\r\n                dispatch({\r\n                    type: AUTHENTICATED_SUCCESS\r\n                });\r\n            } else {\r\n                dispatch({\r\n                    type: AUTHENTICATED_FAIL\r\n                });\r\n            }\r\n        } catch (err) {\r\n            dispatch({\r\n                type: AUTHENTICATED_FAIL\r\n            });\r\n        }\r\n\r\n    } else {\r\n        dispatch({\r\n            type: AUTHENTICATED_FAIL\r\n        });\r\n    }\r\n};\r\n\r\nexport const login = (email, password) => async dispatch => {\r\n    const config = {\r\n        headers: {\r\n            'Content-Type': 'application/json'\r\n        }\r\n    };\r\n\r\n    const body = JSON.stringify({ email, password });\r\n\r\n    try {\r\n        const res = await axios.post(`${process.env.REACT_APP_API_URL}/auth/jwt/create/`, body, config);\r\n\r\n        dispatch({\r\n            type: LOGIN_SUCCESS,\r\n            payload: res.data\r\n        });\r\n\r\n        dispatch(load_user());\r\n    } catch (err) {\r\n        dispatch({\r\n            type: LOGIN_FAIL\r\n        })\r\n    }\r\n};\r\n\r\nexport const signup = (first_name, last_name, email, password, re_password) => async dispatch => {\r\n    const config = {\r\n        headers: {\r\n            'Content-Type': 'application/json'\r\n        }\r\n    };\r\n\r\n    const body = JSON.stringify({ first_name, last_name, email, password, re_password });\r\n\r\n    try {\r\n        const res = await axios.post(`${process.env.REACT_APP_API_URL}/auth/users/`, body, config);\r\n\r\n        dispatch({\r\n            type: SIGNUP_SUCCESS,\r\n            payload: res.data\r\n        });\r\n    } catch (err) {\r\n        dispatch({\r\n            type: SIGNUP_FAIL\r\n        })\r\n    }\r\n};\r\n\r\nexport const verify = (uid, token) => async dispatch => {\r\n    const config = {\r\n        headers: {\r\n            'Content-Type': 'application/json'\r\n        }\r\n    };\r\n\r\n    const body = JSON.stringify({ uid, token });\r\n\r\n    try {\r\n        await axios.post(`${process.env.REACT_APP_API_URL}/auth/users/activation/`, body, config);\r\n\r\n        dispatch({\r\n            type: ACTIVATION_SUCCESS,\r\n        });\r\n    } catch (err) {\r\n        dispatch({\r\n            type: ACTIVATION_FAIL\r\n        })\r\n    }\r\n};\r\n\r\nexport const reset_password = (email) => async dispatch => {\r\n    const config = {\r\n        headers: {\r\n            'Content-Type': 'application/json'\r\n        }\r\n    };\r\n\r\n    const body = JSON.stringify({ email });\r\n\r\n    try {\r\n        await axios.post(`${process.env.REACT_APP_API_URL}/auth/users/reset_password/`, body, config);\r\n\r\n        dispatch({\r\n            type: PASSWORD_RESET_SUCCESS\r\n        });\r\n    } catch (err) {\r\n        dispatch({\r\n            type: PASSWORD_RESET_FAIL\r\n        });\r\n    }\r\n};\r\n\r\nexport const reset_password_confirm = (uid, token, new_password, re_new_password) => async dispatch => {\r\n    const config = {\r\n        headers: {\r\n            'Content-Type': 'application/json'\r\n        }\r\n    };\r\n\r\n    const body = JSON.stringify({ uid, token, new_password, re_new_password });\r\n\r\n    try {\r\n        await axios.post(`${process.env.REACT_APP_API_URL}/auth/users/reset_password_confirm/`, body, config);\r\n\r\n        dispatch({\r\n            type: PASSWORD_RESET_CONFIRM_SUCCESS\r\n        });\r\n    } catch (err) {\r\n        dispatch({\r\n            type: PASSWORD_RESET_CONFIRM_FAIL\r\n        });\r\n    }\r\n};\r\n\r\nexport const logout = () => dispatch => {\r\n    dispatch({\r\n        type: LOGOUT\r\n    });\r\n};\r\n","import React from 'react';\r\nimport { createStyles, Theme, withStyles, WithStyles } from '@material-ui/core/styles';\r\nimport Button from '@material-ui/core/Button';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport MuiDialogTitle from '@material-ui/core/DialogTitle';\r\nimport MuiDialogContent from '@material-ui/core/DialogContent';\r\nimport MuiDialogActions from '@material-ui/core/DialogActions';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport CloseIcon from '@material-ui/icons/Close';\r\nimport Typography from '@material-ui/core/Typography';\r\n\r\nconst styles = (theme: Theme) =>\r\n    createStyles({\r\n        root: {\r\n            margin: 0,\r\n            padding: theme.spacing(2),\r\n        },\r\n        closeButton: {\r\n            position: 'absolute',\r\n            right: theme.spacing(1),\r\n            top: theme.spacing(1),\r\n            color: theme.palette.grey[500],\r\n        },\r\n    });\r\n\r\nexport interface DialogTitleProps extends WithStyles<typeof styles> {\r\n    id: string;\r\n    children: React.ReactNode;\r\n    onClose: () => void;\r\n}\r\n\r\nconst DialogTitle = withStyles(styles)((props: DialogTitleProps) => {\r\n    const { children, classes, onClose, ...other } = props;\r\n    return (\r\n        <MuiDialogTitle disableTypography className={classes.root} {...other}>\r\n            <Typography variant=\"h6\">{children}</Typography>\r\n            {onClose ? (\r\n                <IconButton aria-label=\"close\" className={classes.closeButton} onClick={onClose}>\r\n                    <CloseIcon />\r\n                </IconButton>\r\n            ) : null}\r\n        </MuiDialogTitle>\r\n    );\r\n});\r\n\r\nconst DialogContent = withStyles((theme: Theme) => ({\r\n    root: {\r\n        padding: theme.spacing(2),\r\n    },\r\n}))(MuiDialogContent);\r\n\r\nconst DialogActions = withStyles((theme: Theme) => ({\r\n    root: {\r\n        margin: 0,\r\n        padding: theme.spacing(1),\r\n    },\r\n}))(MuiDialogActions);\r\n\r\nexport default function CustomizedDialogs({ children, title, buttontitle,btnstyle }) {\r\n    const [open, setOpen] = React.useState(false);\r\n\r\n    const handleClickOpen = () => {\r\n        setOpen(true);\r\n    };\r\n    const handleClose = () => {\r\n        setOpen(false);\r\n    };\r\n\r\n    return (\r\n        <div>\r\n            <Button variant=\"outlined\" color=\"primary\" onClick={handleClickOpen} className={btnstyle}>\r\n                {buttontitle}\r\n            </Button>\r\n            <Dialog aria-labelledby=\"customized-dialog-title\" maxWidth=\"lg\" open={open}>\r\n                <DialogTitle id=\"customized-dialog-title\" onClose={handleClose}>\r\n                    {title}\r\n                </DialogTitle>\r\n                <DialogContent dividers>\r\n                    {children}\r\n                </DialogContent>\r\n\r\n            </Dialog>\r\n        </div>\r\n    );\r\n}","import React from 'react';\r\nimport sport from '../assets/sports.png'\r\nimport Signup from './Signup';\r\nimport CustomizedDialogs from './popupform';\r\n\r\nconst Home = () => {\r\n    return (\r\n        <>\r\n            <section id='header' className=\"d-flex align-items-center\">\r\n                <div className=\"container-fluid nav_bg\">\r\n                    <div className=\"row\">\r\n                        <div className=\"col-10 mx-auto\">\r\n                            <div className=\"row\">\r\n                                <div className=\"col-md-6 pt-10 pt-lg-0 order-2 order-lg-1 d-flex justify-content-center flex-column\">\r\n                                    <h1>India's First E-Auction in Sports. Signup Now at <strong className=\"brand-name\">BidApp</strong></h1>\r\n                                    <h2 className=\"mt-3\">Take a part in Auction Process. Play or Own your team.</h2>\r\n                                    <div className=\"mt-3\">\r\n                                        <CustomizedDialogs title=\"Register Here\" buttontitle=\"Sign Up\" btnstyle=\"btn-get-started\">\r\n                                            <Signup />\r\n                                        </CustomizedDialogs>\r\n                                    </div>\r\n\r\n                                </div>\r\n                                <div className=\"col-lg-6 order-1 order-lg-2 header-img\">\r\n                                    <img src={sport} class=\"img-fluid animated\" alt='home img' />\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </section>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Home;","import React from 'react';\r\n\r\nconst About = () => {\r\n    return(\r\n        <>\r\n        <h1>About Page</h1>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default About;","import React, { useState } from 'react';\r\nimport { Grid, Paper, Button, Typography } from '@material-ui/core'\r\nimport { TextField } from '@material-ui/core'\r\nimport { Formik, Form, Field, ErrorMessage } from 'formik'\r\nimport * as Yup from 'yup'\r\nimport { Redirect } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\nimport { login } from '../actions/auth';\r\n\r\n\r\nconst Login = ({ login, isAuthenticated }) => {\r\n    const paperStyle = { padding: '0 15px 40px 15px', width: 400, }\r\n    const btnStyle = { marginTop: 10, color: '#fff', backgroundColor: \"#FF8C00\", }\r\n    const passwordRegExp = /^(?=.*?[A-Z])(?=.*?[a-z])(?=.*?[0-9])(?=.*?[#?!@$%^&*-]).{8,}$/\r\n    const initialValues = {\r\n        email: '',\r\n        password: '',\r\n    }\r\n    const validationSchema = Yup.object().shape({\r\n        email: Yup.string().email(\"Enter valid email\").required(\"Required\"),\r\n\r\n        password: Yup.string().min(8, \"Minimum characters should be 8\")\r\n            .matches(passwordRegExp, \"Password must have one upper, lower case, number, special symbol\").required('Required'),\r\n    })\r\n    const [formData, setFormData] = useState({\r\n        email: '',\r\n        password: ''\r\n    });\r\n\r\n    const { email, password } = formData;\r\n\r\n    const onChange = e => setFormData({ ...formData, [e.target.name]: e.target.value });\r\n\r\n    const onSubmit = e => {\r\n        e.preventDefault();\r\n\r\n        login(email, password);\r\n    };\r\n\r\n    if (isAuthenticated) {\r\n        return <Redirect to='/' />\r\n    }\r\n\r\n\r\n    return (\r\n        <Grid>\r\n            <Paper elevation={0} style={paperStyle}>\r\n                <Grid align='center'>\r\n                    <Typography variant='caption'>Login Here</Typography>\r\n                </Grid>\r\n                <Formik initialValues={initialValues} validationSchema={validationSchema} onSubmit={onSubmit}>\r\n                    {(props) => (\r\n                        <Form noValidate>\r\n                            {/* <TextField label='Name' name=\"name\" fullWidth value={props.values.name}\r\n                    onChange={props.handleChange} /> */}\r\n\r\n                            <Field as={TextField} name='email' label='Email' fullWidth\r\n                                error={props.errors.email && props.touched.email}\r\n                                onChange={e => onChange(e)}\r\n                                value={email}\r\n                                helperText={<ErrorMessage name='email' />} required />\r\n\r\n                            <Field as={TextField} name='password' label='Password' type='password' fullWidth\r\n                                error={props.errors.password && props.touched.password}\r\n                                value={password}\r\n                                onChange={e => onChange(e)}\r\n                                helperText={<ErrorMessage name='password' />} required />\r\n\r\n                            <Button type='submit' style={btnStyle} variant='contained'\r\n                                color='primary' className=\"btn-get-started\" onClick={e => { onSubmit(e) }}>Login</Button>\r\n                        </Form>\r\n                    )}\r\n                </Formik>\r\n            </Paper>\r\n        </Grid>\r\n    )\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n    isAuthenticated: state.auth.isAuthenticated\r\n});\r\n\r\nexport default connect(mapStateToProps, { login })(Login);\r\n","import React from 'react';\r\n\r\nconst Contact = () => {\r\n    return(\r\n        <>\r\n        <h1>Contact Page</h1>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Contact;","import React from 'react';\r\nimport { NavLink } from 'react-router-dom';\r\nimport Login from '../Containers/Login'\r\nimport CustomizedDialogs from '../Containers/popupform';\r\n\r\nconst Navbar = () => {\r\n    return (\r\n        <>\r\n            <div className=\"container-fluid nav_bg\">\r\n                <div className=\"row\">\r\n                    <div className=\"col-10 mx-auto\">\r\n                        <nav className=\"navbar navbar-expand-lg navbar-light bg-light\">\r\n                            <div className=\"container-fluid\">\r\n                                <NavLink className=\"navbar-brand navlogo\" to=\"/\">BidApp</NavLink>\r\n                                <button className=\"navbar-toggler\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#navbarSupportedContent\" aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n                                    <span className=\"navbar-toggler-icon\"></span>\r\n                                </button>\r\n                                <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\r\n                                    <ul className=\"navbar-nav ms-auto mb-2 mb-lg-0\">\r\n                                        <li className=\"nav-item\">\r\n                                            <CustomizedDialogs title=\"Login Here\" buttontitle=\"Login\" btnStyle=\"loginnav\">\r\n                                                <Login />\r\n                                            </CustomizedDialogs>\r\n                                        </li>\r\n                                        <li className=\"nav-item\">\r\n                                            <NavLink activeClassName=\"acitve\" className=\"nav-link\" to='/about'>About Us</NavLink>\r\n                                        </li>\r\n                                        <li className=\"nav-item\">\r\n                                            <NavLink activeClassName=\"active\" className=\"nav-link\" to='/contact'>Contact Us</NavLink>\r\n                                        </li>\r\n                                    </ul>\r\n                                </div>\r\n                            </div>\r\n                        </nav>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n\r\n        </>\r\n\r\n    );\r\n}\r\n\r\nexport default Navbar;","import React, { useState } from 'react';\r\nimport { Redirect } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\nimport { verify } from '../actions/auth';\r\n\r\nconst Activate = ({ verify, match }) => {\r\n    const [verified, setVerified] = useState(false);\r\n\r\n    const verify_account = e => {\r\n        const uid = match.params.uid;\r\n        const token = match.params.token;\r\n\r\n        verify(uid, token);\r\n        setVerified(true);\r\n    };\r\n\r\n    if (verified) {\r\n        return <Redirect to='/' />\r\n    }\r\n\r\n    return (\r\n        <div className='container'>\r\n            <div\r\n                className='d-flex flex-column justify-content-center align-items-center'\r\n                style={{ marginTop: '200px' }}\r\n            >\r\n                <h1>Verify your Account:</h1>\r\n                <button\r\n                    onClick={verify_account}\r\n                    style={{ marginTop: '50px' }}\r\n                    type='button'\r\n                    className='btn btn-primary'\r\n                >\r\n                    Verify\r\n                </button>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default connect(null, { verify })(Activate);\r\n","import React from 'react';\r\nimport { Switch, Route, Redirect } from 'react-router-dom';\r\nimport \"../node_modules/bootstrap/dist/css/bootstrap.min.css\"\r\nimport \"../node_modules/bootstrap/dist/js/bootstrap.bundle\"\r\nimport Home from './Containers/Home';\r\nimport About from './Containers/About'\r\nimport Login from './Containers/Login'\r\nimport Signup from './Containers/Signup'\r\nimport Contact from './Containers/Contact';\r\nimport Navbar from './components/Navbar'\r\nimport Activate from './Containers/Activate'\r\n\r\n\r\n\r\nconst App = () => {\r\n    return (\r\n        <>\r\n            <Navbar />\r\n            <Switch>\r\n                <Route exact path='/' component={Home} />\r\n                <Route exact path='/about' component={About} />\r\n                <Route exact path='/contact' component={Contact} />\r\n                <Route exact path='/login' component={Login} />\r\n                <Route exact path='/signup' component={Signup} />\r\n                <Route exact path='/activate/:uid/:token' component={Activate} />\r\n            </Switch>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport './index.css';\nimport {BrowserRouter} from \"react-router-dom\"\n\n\nReactDOM.render(\n  <BrowserRouter>\n    <App />\n  </BrowserRouter>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}